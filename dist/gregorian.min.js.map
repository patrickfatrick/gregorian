{"version":3,"sources":["gregorian.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","gregorian","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"reform","./modules/reform",2,"reformAP","date","hour","getHours","ampm",3,"reformDD","days","dayOfWeek","getDay",4,"reformDDD",5,"reformHH",6,"reformHHH","toString",7,"reformMM","months","month","getMonth",8,"reformMMM",9,"add","increment","newYear","newMonth","current","Date","parse","d","increments","ms","min","h","w","sum","newDate","getUTCDate","getUTCMonth","getUTCFullYear","setUTCFullYear","input","to","subtract","./reform-subtract","./reform-to",10,"reformAp",11,"reformDate","obj","TypeError","Object","prototype","isNaN","getTime",12,"reformDd","day","getDate",13,"reformDdd",14,"reformHh",15,"reformHhh",16,"reformISO","format","toISOString","split",17,"reformMl","milliseconds","getMilliseconds",18,"reformMll",19,"reformMm",20,"reformMmm",21,"reformSs","second","getSeconds",22,23,"./reform-add",24,"converted","search","some","piece","indexOf","reformTo","unix","utc","iso","replacer","replace","AP","ap","DD","DDD","MM","MMM","mm","mmm","dd","ddd","hh","hhh","HH","HHH","ss","sss","ml","mll","tt","ttt","yy","yyyy","zz","./reform-_ap_","./reform-_dd_","./reform-_ddd_","./reform-_hh_","./reform-_hhh_","./reform-_mm_","./reform-_mmm_","./reform-ap","./reform-dd","./reform-ddd","./reform-hh","./reform-hhh","./reform-iso","./reform-ml","./reform-mll","./reform-mm","./reform-mmm","./reform-ss","./reform-sss","./reform-tt","./reform-ttt","./reform-unix","./reform-utc","./reform-yy","./reform-yyyy","./reform-zz",25,"reformTt","minute","getMinutes",26,"reformTtt",27,"reformUnix",28,"reformUTC","toUTCString","arr","newArr","push","join",29,"reformYy","getFullYear","substr",30,"reformYyyy",31,"reformZz","offset","getTimezoneOffset",32,"reformAdd","reformSubtract","./reform-date"],"mappings":"CAAA,SAAUA,GAAG,GAAoB,gBAAVC,UAAoC,mBAATC,QAAsBA,OAAOD,QAAQD,QAAS,IAAmB,kBAATG,SAAqBA,OAAOC,IAAKD,UAAUH,OAAO,CAAC,GAAIK,EAAkCA,GAAb,mBAATC,QAAwBA,OAA+B,mBAATC,QAAwBA,OAA6B,mBAAPC,MAAsBA,KAAYC,KAAKJ,EAAEK,UAAYV,MAAO,WAAqC,MAAO,SAAUW,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIhB,GAAE,GAAIqB,OAAM,uBAAuBL,EAAE,IAAK,MAAMhB,GAAEsB,KAAK,mBAAmBtB,EAAE,GAAIuB,GAAEV,EAAEG,IAAIf,WAAYW,GAAEI,GAAG,GAAGQ,KAAKD,EAAEtB,QAAQ,SAASU,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIY,EAAEA,EAAEtB,QAAQU,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGf,QAAkD,IAAI,GAA1CmB,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEW,OAAOT,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKW,GAAG,SAASP,EAAQjB,EAAOD,GACx0B,YAkBG,IAAI0B,GAAOR,EAAQ,oBAAwBT,GAAWiB,OAAOA,EAAQzB,GAAOD,QAAUS,IAEtFkB,mBAAmB,KAAKC,GAAG,SAASV,EAAQjB,EAAOD,GACtD,YAIG,SAAS6B,GAASC,GAAM,GAAIC,GAAKD,EAAKE,WAAeC,EAAY,GAAPF,EAAU,KAAK,IAAK,OAAOE,GAAMhC,EAAOD,QAAU6B,OAEzGK,GAAG,SAAShB,EAAQjB,EAAOD,GACjC,YAIG,SAASmC,GAASL,GAAM,GAAIM,IAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAWC,EAAUP,EAAKQ,QAAS,OAAOF,GAAKC,GAAYpC,EAAOD,QAAUmC,OAE/II,GAAG,SAASrB,EAAQjB,EAAOD,GACjC,YAIG,SAASwC,GAAUV,GAAM,GAAIM,IAAM,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAAgBC,EAAUP,EAAKQ,QAAS,OAAOF,GAAKC,GAAYpC,EAAOD,QAAUwC,OAE7KC,GAAG,SAASvB,EAAQjB,EAAOD,GACjC,YAIG,SAAS0C,GAASZ,GAAM,GAAIC,GAAKD,EAAKE,UAAW,OAAOD,GAAM9B,EAAOD,QAAU0C,OAE5EC,GAAG,SAASzB,EAAQjB,EAAOD,GACjC,YAIG,SAAS4C,GAAUd,GAAM,GAAIC,GAAKD,EAAKE,WAAWa,UAAW,OAAOd,GAAKP,OAAS,EAAE,IAAMO,EAAKA,EAAM9B,EAAOD,QAAU4C,OAEnHE,GAAG,SAAS5B,EAAQjB,EAAOD,GACjC,YAIG,SAAS+C,GAASjB,GAAM,GAAIkB,IAAQ,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAWC,EAAMnB,EAAKoB,UAAW,OAAOF,GAAOC,GAAQhD,EAAOD,QAAU+C,OAE5KI,GAAG,SAASjC,EAAQjB,EAAOD,GACjC,YAIG,SAASoD,GAAUtB,GAAM,GAAIkB,IAAQ,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,YAAgBC,EAAMnB,EAAKoB,UAAW,OAAOF,GAAOC,GAAQhD,EAAOD,QAAUoD,OAElNC,GAAG,SAASnC,EAAQjB,EAAOD,GACjC,YAKG,SAASsD,GAAI1C,EAAE2C,GAAW,GAErBC,GAAYC,EAFaC,EAAQC,KAAKC,MAAMpD,KAAKqD,GAAOC,GAAYC,GAAG,EAAEjD,EAAE,IAAKkD,IAAI,IAAMC,EAAE,KAAQJ,EAAE,MAASK,EAAE,QAAeC,EAAIT,EAAU9C,EAAIkD,EAAWP,GAAezB,EAAK,GAAI6B,MAAKQ,GAEjKC,EAAQ5D,KAAKqD,EAAEQ,YAE4Q,OAF9O,MAAdd,IAAmBE,EAAWjD,KAAKqD,EAAES,cAAgB1D,EAAE4C,EAAUhD,KAAKqD,EAAEU,iBAAoGzC,EAAhFsC,EAAU,GAAIT,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAAW,EAAE,IAAIY,aAAqB,GAAIV,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAAW,EAAE,IAAkB,GAAIE,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAASW,KAEpV,MAAdb,IAAmBC,EAAUhD,KAAKqD,EAAEU,iBAAmB3D,EAAE6C,EAAWjD,KAAKqD,EAAES,cAAiGxC,EAAhFsC,EAAU,GAAIT,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAAW,EAAE,IAAIY,aAAqB,GAAIV,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAAW,EAAE,IAAkB,GAAIE,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAASW,MAAoBP,EAAE/B,EAAK2C,MAAMjE,KAAKiE,MAAMC,GAAGA,EAAGpB,IAAIA,EAAIqB,SAASA,GATtW,GAAID,GAAGxD,EAAQ,eAAmByD,EAASzD,EAAQ,oBAS8TjB,GAAOD,QAAUsD,IAE5YsB,oBAAoB,GAAGC,cAAc,KAAKC,IAAI,SAAS5D,EAAQjB,EAAOD,GACzE,YAIG,SAAS+E,GAASjD,GAAM,GAAIC,GAAKD,EAAKE,WAAeC,EAAY,GAAPF,EAAU,KAAK,IAAK,OAAOE,GAAMhC,EAAOD,QAAU+E,OAEzGC,IAAI,SAAS9D,EAAQjB,EAAOD,GAClC,YAIG,SAASiF,GAAWC,GAAK,GAAU,MAAPA,EAAY,KAAM,IAAIC,WAAU,4BAAiD,IAApBD,EAAM,GAAIvB,MAAKuB,GAAgD,kBAAxCE,OAAOC,UAAUxC,SAAStB,KAAK2D,IAA6BI,MAAMJ,EAAIK,WAAY,KAAM,IAAIJ,WAAU,2BAA8B,OAAOD,GAAKjF,EAAOD,QAAUiF,OAE9QO,IAAI,SAAStE,EAAQjB,EAAOD,GAClC,YAIG,SAASyF,GAAS3D,GAAM,GAAI4D,GAAI5D,EAAK6D,UAAU9C,UAAW,OAAO6C,GAAKzF,EAAOD,QAAUyF,OAEpFG,IAAI,SAAS1E,EAAQjB,EAAOD,GAClC,YAIG,SAAS6F,GAAU/D,GAAM,GAAI4D,GAAI5D,EAAK6D,UAAU9C,UAAW,OAAO6C,GAAIlE,OAAS,EAAE,IAAMkE,EAAIA,EAAKzF,EAAOD,QAAU6F,OAE9GC,IAAI,SAAS5E,EAAQjB,EAAOD,GAClC,YAIG,SAAS+F,GAASjE,GAAM,GAAIC,GAAKD,EAAKE,UAA2F,OAApE,KAATD,IAAWA,EAAO,IAAa,GAAPA,IAAUA,EAAOA,GAAQA,GAAQ,KAAGA,GAAc,IAAUA,EAAM9B,EAAOD,QAAU+F,OAE5JC,IAAI,SAAS9E,EAAQjB,EAAOD,GAClC,YAIG,SAASiG,GAAUnE,GAAM,GAAIC,GAAKD,EAAKE,UAAkH,OAA3F,KAATD,IAAWA,EAAO,IAAa,GAAPA,IAAUA,EAAOA,GAAQA,GAAQ,KAAGA,GAAc,IAAGA,EAAOA,EAAKc,WAAkBd,EAAKP,OAAS,EAAE,IAAMO,EAAKA,EAAM9B,EAAOD,QAAUiG,OAE/MC,IAAI,SAAShF,EAAQjB,EAAOD,GAClC,YAKG,SAASmG,GAAUrE,EAAKsE,GAC3B,MADmCA,GAASA,GAAU,KACxC,UAAXA,EAA0BtE,EAAKuE,cAAcC,MAAM,KAAK,GAAUxE,EAAKuE,cAAepG,EAAOD,QAAUmG,OAEpGI,IAAI,SAASrF,EAAQjB,EAAOD,GAClC,YAIG,SAASwG,GAAS1E,GAAM,GAAI2E,GAAa3E,EAAK4E,kBAAkB7D,UAAW,OAAO4D,GAAcxG,EAAOD,QAAUwG,OAE9GG,IAAI,SAASzF,EAAQjB,EAAOD,GAClC,YAIG,SAAS4G,GAAU9E,GAAM,GAAI2E,GAAa3E,EAAK4E,kBAAkB7D,UAAW,QAAO4D,EAAajF,QAAQ,IAAK,GAAEiF,EAAe,KAAOA,CAAa,MAAM,KAAK,GAAEA,EAAe,IAAMA,CAAa,MAAM,SAAQA,EAAeA,EAAoB,MAAOA,GAAcxG,EAAOD,QAAU4G,OAErRC,IAAI,SAAS3F,EAAQjB,EAAOD,GAClC,YAIG,SAAS8G,GAAShF,GAAM,GAAImB,IAAOnB,EAAKoB,WAAa,GAAGL,UAAW,OAAOI,GAAOhD,EAAOD,QAAU8G,OAE/FC,IAAI,SAAS7F,EAAQjB,EAAOD,GAClC,YAIG,SAASgH,GAAUlF,GAAM,GAAImB,IAAOnB,EAAKoB,WAAa,GAAGL,UAAW,OAAOI,GAAMzB,OAAS,EAAE,IAAMyB,EAAMA,EAAOhD,EAAOD,QAAUgH,OAE7HC,IAAI,SAAS/F,EAAQjB,EAAOD,GAClC,YAIG,SAASkH,GAASpF,GAAM,GAAIqF,GAAOrF,EAAKsF,YAAa,OAAOD,GAAQlH,EAAOD,QAAUkH,OAElFG,IAAI,SAASnG,EAAQjB,EAAOD,GAClC,YAIG,SAASkH,GAASpF,GAAM,GAAIqF,GAAOrF,EAAKsF,aAAavE,UAAW,OAAOsE,GAAO3F,OAAS,EAAE,IAAM2F,EAAOA,EAAQlH,EAAOD,QAAUkH,OAE5HI,IAAI,SAASpG,EAAQjB,EAAOD,GAClC,YAKG,SAAS2E,GAAS/D,EAAE2C,GAAW,GAE1BC,GAAYC,EAFkBC,EAAQC,KAAKC,MAAMpD,KAAKqD,GAAOC,GAAYC,GAAG,EAAEjD,EAAE,IAAKkD,IAAI,IAAMC,EAAE,KAAQJ,EAAE,MAASK,EAAE,QAAeC,EAAIT,EAAU9C,EAAIkD,EAAWP,GAAezB,EAAK,GAAI6B,MAAKQ,GAEtKC,EAAQ5D,KAAKqD,EAAEQ,YAE4Q,OAF9O,MAAdd,IAAmBE,EAAWjD,KAAKqD,EAAES,cAAgB1D,EAAE4C,EAAUhD,KAAKqD,EAAEU,iBAAoGzC,EAAhFsC,EAAU,GAAIT,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAAW,EAAE,IAAIY,aAAqB,GAAIV,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAAW,EAAE,IAAkB,GAAIE,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAASW,KAEpV,MAAdb,IAAmBC,EAAUhD,KAAKqD,EAAEU,iBAAmB3D,EAAE6C,EAAWjD,KAAKqD,EAAES,cAAiGxC,EAAhFsC,EAAU,GAAIT,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAAW,EAAE,IAAIY,aAAqB,GAAIV,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAAW,EAAE,IAAkB,GAAIE,MAAKnD,KAAKqD,EAAEW,eAAehB,EAAQC,EAASW,MAAoBP,EAAE/B,EAAK2C,MAAMjE,KAAKiE,MAAMC,GAAGA,EAAGpB,IAAIA,EAAIqB,SAASA,GATtW,GAAID,GAAGxD,EAAQ,eAAmBoC,EAAIpC,EAAQ,eASmUjB,GAAOD,QAAU2E,IAE5Y4C,eAAe,EAAE1C,cAAc,KAAK2C,IAAI,SAAStG,EAAQjB,EAAOD,GACnE,YAIG,SAAS0E,GAAG0B,GAAQ,GAAItE,GAAKtB,KAAKqD,EAAM4D,EAAUrB,EAAWsB,GAAQ,OACxE,YACA,MACA,YACA,MACA,OACA,KACA,MACA,MACA,KACA,KACA,MACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KAKA,OAJEA,GAAOC,KAAK,SAASC,GACvB,GAAgC,KAA7BH,EAAUI,QAAQD,GAAe,OAAOA,GAAO,IAAK,OAAuC,MAAhCH,GAAYK,EAASC,KAAKjG,IAAa,CAAK,KAAK,YAAmD,MAAvC2F,GAAYK,EAASE,IAAIlG,EAAK,UAAgB,CAAK,KAAK,MAAqC,MAA/B2F,GAAYK,EAASE,IAAIlG,IAAa,CAAK,KAAK,YAAmD,MAAvC2F,GAAYK,EAASG,IAAInG,EAAK,UAAgB,CAAK,KAAK,MAAqC,MAA/B2F,GAAYK,EAASG,IAAInG,IAAa,CAAK,SAE9V,GAAIoG,GAASJ,EAASF,GAAO9F,GAAMe,UAAyD,OAA9C4E,GAAYA,EAAUU,QAAQP,EAAMM,IAAiB,KAC5FT,EApCM,GAAIK,KAAYA,GAASM,GAAKlH,EAAQ,iBAAiB4G,EAASO,GAAKnH,EAAQ,eAAe4G,EAASQ,GAAKpH,EAAQ,iBAAiB4G,EAASS,IAAMrH,EAAQ,kBAAkB4G,EAASU,GAAKtH,EAAQ,iBAAiB4G,EAASW,IAAMvH,EAAQ,kBAAkB4G,EAASY,GAAKxH,EAAQ,eAAe4G,EAASa,IAAMzH,EAAQ,gBAAgB4G,EAASc,GAAK1H,EAAQ,eAAe4G,EAASe,IAAM3H,EAAQ,gBAAgB4G,EAASgB,GAAK5H,EAAQ,eAAe4G,EAASiB,IAAM7H,EAAQ,gBAAgB4G,EAASkB,GAAK9H,EAAQ,iBAAiB4G,EAASmB,IAAM/H,EAAQ,kBAAkB4G,EAASoB,GAAKhI,EAAQ,eAAe4G,EAASqB,IAAMjI,EAAQ,gBAAgB4G,EAASsB,GAAKlI,EAAQ,eAAe4G,EAASuB,IAAMnI,EAAQ,gBAAgB4G,EAASwB,GAAKpI,EAAQ,eAAe4G,EAASyB,IAAMrI,EAAQ,gBAAgB4G,EAAS0B,GAAKtI,EAAQ,eAAe4G,EAAS2B,KAAOvI,EAAQ,iBAAiB4G,EAAS4B,GAAKxI,EAAQ,eAAe4G,EAASC,KAAO7G,EAAQ,iBAAiB4G,EAASE,IAAM9G,EAAQ,gBAAgB4G,EAASG,IAAM/G,EAAQ,gBAoCz+BjB,EAAOD,QAAU0E,IAEhCiF,gBAAgB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,cAAc,GAAGC,cAAc,GAAGC,eAAe,GAAGC,cAAc,GAAGC,eAAe,GAAGC,eAAe,GAAGC,cAAc,GAAGC,eAAe,GAAGC,cAAc,GAAGC,eAAe,GAAGC,cAAc,GAAGC,eAAe,GAAGC,cAAc,GAAGC,eAAe,GAAGC,gBAAgB,GAAGC,eAAe,GAAGC,cAAc,GAAGC,gBAAgB,GAAGC,cAAc,KAAKC,IAAI,SAASnK,EAAQjB,EAAOD,GACjf,YAIG,SAASsL,GAASxJ,GAAM,GAAIyJ,GAAOzJ,EAAK0J,aAAa3I,UAAW,OAAO0I,GAAQtL,EAAOD,QAAUsL,OAE7FG,IAAI,SAASvK,EAAQjB,EAAOD,GAClC,YAIG,SAAS0L,GAAU5J,GAAM,GAAIyJ,GAAOzJ,EAAK0J,aAAa3I,UAAW,OAAO0I,GAAO/J,OAAS,EAAE,IAAM+J,EAAOA,EAAQtL,EAAOD,QAAU0L,OAE7HC,IAAI,SAASzK,EAAQjB,EAAOD,GAClC,YAIG,SAAS4L,GAAW9J,GAAM,MAAO6B,MAAKC,MAAM9B,GAAO7B,EAAOD,QAAU4L,OAEjEC,IAAI,SAAS3K,EAAQjB,EAAOD,GAClC,YAKG,SAAS8L,GAAUhK,EAAKsE,GAAQA,EAASA,GAAU,IAAK,IAAI4B,GAAIlG,EAAKiK,aAAc,IAAc,UAAX3F,EAAmB,CAAsC,IAAI,GAArC4F,GAAIhE,EAAI1B,MAAM,KAAS2F,KAAkB9K,EAAE,EAAM,EAAJA,EAAMA,IAAM8K,EAAOC,KAAKF,EAAI7K,GAAK,OAAO8K,GAAOE,KAAK,KAAM,MAAOnE,GAAK/H,EAAOD,QAAU8L,OAE/OM,IAAI,SAASlL,EAAQjB,EAAOD,GAClC,YAIG,SAASqM,GAASvK,GAAM,MAAOA,GAAKwK,cAAczJ,WAAW0J,OAAO,GAAItM,EAAOD,QAAUqM,OAEtFG,IAAI,SAAStL,EAAQjB,EAAOD,GAClC,YAIG,SAASyM,GAAW3K,GAAM,MAAOA,GAAKwK,cAAerM,EAAOD,QAAUyM,OAEnEC,IAAI,SAASxL,EAAQjB,EAAOD,GAClC,YAIG,SAAS2M,GAAS7K,GAAM,GAAI8K,GAAO9K,EAAK+K,oBAAsB,GAAK,EAAG,OAAO,OAASD,EAAS,MAAO3M,EAAOD,QAAU2M,OAEpHG,IAAI,SAAS5L,EAAQjB,EAAOD,GAClC,YAIG,SAAS0B,GAAOwD,GAAK,GAAIpD,GAAKmD,EAAWC,EAAK,QAAQrB,EAAE/B,EAAK2C,MAAMS,EAAIR,GAAGoD,EAASxE,IAAIyJ,EAAUpI,SAASqI,GAJhG,GAAI/H,GAAW/D,EAAQ,iBAAqB4G,EAAS5G,EAAQ,eAAmB6L,EAAU7L,EAAQ,gBAAoB8L,EAAe9L,EAAQ,oBAI5BjB,GAAOD,QAAU0B,IAE5I6F,eAAe,EAAE0F,gBAAgB,GAAGrI,oBAAoB,GAAGC,cAAc,UAAU,IAAI","file":"gregorian.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.gregorian = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict'; /**\n * Gregorian\n * Author: Patrick Fricano\n * https://www.github.com/patrickfatrick/gregorian\n * \n * Take a user-input date in any format and convert it to several formats\n * Also serves as a wrapper for common JS date methods like toUTCString and toISOString\n * toLocaleDateString is currently not well-supported especially on mobile, so we're avoiding it.\n * \n * gregorian.reform.to('__FORMAT STRING__') string with formatting options specified with keyword strings\n * \t\tSee ./modules/reform-to.js for more information on this\n * gregorian.reform(__OBJECT__).to('iso') ISO string including time such as '2015-09-12T23:06:19Z'\n * \t\t`iso-short` can be added to reduce the string to just the date, like '2015-09-12'\n * gregorian.reform(__OBJECT__).to('utc') UTC string such as 'Sat, 12 Sep 2015 06:00:00 GMT'\n * \t\t`utc-short` can be added to reduce the string to just the date, like 'Sat, 12 Sep 2015'\n * gregorian.reform(__OBJECT__).to('unix') milliseconds since January 1, 1970\n * gregorian.reform(__OBJECT__).add(_NUMBER__, __INCREMENT_STRING__) add time\n * gregorian.reform(__OBJECT__).subtract(_NUMBER__, __INCREMENT_STRING__) subtract time\n */var reform=require('./modules/reform');var gregorian={reform:reform};module.exports = gregorian;\n\n},{\"./modules/reform\":32}],2:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the capitalized 12-hour clock period (AM/PM)\n * @param   {Date}   date a date object\n * @returns {String} the capitalized 12-hour clock period \n */function reformAP(date){var hour=date.getHours();var ampm=hour < 12?'AM':'PM';return ampm;}module.exports = reformAP;\n\n},{}],3:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the abreviated day of the week\n * @param {Date} \ta date object\n * @returns {Number}\tthe abbreviated day of the week\n */function reformDD(date){var days=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];var dayOfWeek=date.getDay();return days[dayOfWeek];}module.exports = reformDD;\n\n},{}],4:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the day of the week\n * @param {Date} \ta date object\n * @returns {String} the full day of the week\n */function reformDDD(date){var days=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];var dayOfWeek=date.getDay();return days[dayOfWeek];}module.exports = reformDDD;\n\n},{}],5:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the 24-hour clock hour with no leading zeros (0-23)\n * @param   {Date}   date a date object\n * @returns {String} the hour with no leading zeros\n */function reformHH(date){var hour=date.getHours();return hour;}module.exports = reformHH;\n\n},{}],6:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the 24-hour clock hour with no leading zeros (0-23)\n * @param   {Date}   date a date object\n * @returns {String} the hour with no leading zeros\n */function reformHHH(date){var hour=date.getHours().toString();return hour.length < 2?'0' + hour:hour;}module.exports = reformHHH;\n\n},{}],7:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the abbreviated month\n * @param {Date} \ta date object\n * @returns {String}\tthe abbreviated month\n */function reformMM(date){var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];var month=date.getMonth();return months[month];}module.exports = reformMM;\n\n},{}],8:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the month\n * @param {Date} \ta date object\n * @returns {String}\tthe full month\n */function reformMMM(date){var months=['January','February','March','April','May','June','July','August','September','October','November','December'];var month=date.getMonth();return months[month];}module.exports = reformMMM;\n\n},{}],9:[function(require,module,exports){\n'use strict';var to=require('./reform-to');var subtract=require('./reform-subtract'); /**\n * Adds specified increments to a gregorian object\n * @param   {Number} n         a number to multiply the increment by\n * @param   {String} increment an increment to add\n * @returns {Object} a new gregorian object\n */function add(n,increment){var current=Date.parse(this.d);var increments={ms:1,s:1000,min:60000,h:3600000,d:86400000,w:604800000};var sum=current + n * increments[increment];var date=new Date(sum); /**\n\t * Handle month so that you always wind up on the same day of the month\n\t */var newYear;var newMonth;var newDate=this.d.getUTCDate();if(increment === 'm'){newMonth = this.d.getUTCMonth() + n;newYear = this.d.getUTCFullYear();if(newDate > new Date(this.d.setUTCFullYear(newYear,newMonth + 1,0)).getUTCDate()){date = new Date(this.d.setUTCFullYear(newYear,newMonth + 1,0));}else {date = new Date(this.d.setUTCFullYear(newYear,newMonth,newDate));}} /**\n\t * Handle year so that you always wind up on the same day of the month\n\t */if(increment === 'y'){newYear = this.d.getUTCFullYear() + n;newMonth = this.d.getUTCMonth();if(newDate > new Date(this.d.setUTCFullYear(newYear,newMonth + 1,0)).getUTCDate()){date = new Date(this.d.setUTCFullYear(newYear,newMonth + 1,0));}else {date = new Date(this.d.setUTCFullYear(newYear,newMonth,newDate));}}return {d:date,input:this.input,to:to,add:add,subtract:subtract};}module.exports = add;\n\n},{\"./reform-subtract\":23,\"./reform-to\":24}],10:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the uncapitalized 12-hour clock period (AM/PM)\n * @param   {Date}   date a date object\n * @returns {String} the uncapitalized 12-hour clock period \n */function reformAp(date){var hour=date.getHours();var ampm=hour < 12?'am':'pm';return ampm;}module.exports = reformAp;\n\n},{}],11:[function(require,module,exports){\n'use strict'; /**\n * Convert the object passed to a date and test its validity\n * @param {Object} \tobj any object\n * @returns {Date}\tif string passes the test, return the date object\n */function reformDate(obj){if(obj == null)throw new TypeError('This is null or undefined');obj = new Date(obj);if(Object.prototype.toString.call(obj) === '[object Date]'){if(isNaN(obj.getTime())){throw new TypeError('This is not a valid date');}}return obj;}module.exports = reformDate;\n\n},{}],12:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the date of the month with no leading zeros (1-31)\n * @param {Date} \ta date object\n * @returns {Number}\tthe date of the month with no leading zeros\n */function reformDd(date){var day=date.getDate().toString();return day;}module.exports = reformDd;\n\n},{}],13:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit date of the month (01-31)\n * @param {Date} \ta date object\n * @returns {Number}\tthe two-digit date of the month\n */function reformDdd(date){var day=date.getDate().toString();return day.length < 2?'0' + day:day;}module.exports = reformDdd;\n\n},{}],14:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the hour with no leading zeros (1-12)\n * @param   {Date}   date a date object\n * @returns {String} the hour with no leading zeros\n */function reformHh(date){var hour=date.getHours();if(hour === 0)hour = 12;if(hour < 13)hour = hour;if(hour >= 13)hour = hour - 12;return hour;}module.exports = reformHh;\n\n},{}],15:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit hour (01-12)\n * @param   {Date}   date a date object\n * @returns {String} the two-digit hour\n */function reformHhh(date){var hour=date.getHours();if(hour === 0)hour = 12;if(hour < 13)hour = hour;if(hour >= 13)hour = hour - 12;hour = hour.toString();return hour.length < 2?'0' + hour:hour;}module.exports = reformHhh;\n\n},{}],16:[function(require,module,exports){\n'use strict'; /**\n * Converts a date object to an ISO string\n * @param   {Date}   date   a date object\n * @param {String}\t\tformat optional 'short' to remove the time\n * @returns {String} ISO String including time\n */function reformISO(date,format){format = format || null; //console.log('iso function date: ' + date);\nif(format === 'short')return date.toISOString().split('T')[0];return date.toISOString();}module.exports = reformISO;\n\n},{}],17:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the milliseconds with no leading zeros (0-999)\n * @param   {Date} date a date object\n * @returns {String}    the number of milliseconds\n */function reformMl(date){var milliseconds=date.getMilliseconds().toString();return milliseconds;}module.exports = reformMl;\n\n},{}],18:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and and output the three-digit milliseconds (000-999)\n * @param   {Date}   date a date object\n * @returns {String} the number of milliseconds\n */function reformMll(date){var milliseconds=date.getMilliseconds().toString();switch(milliseconds.length){case 1:milliseconds = '00' + milliseconds;break;case 2:milliseconds = '0' + milliseconds;break;default:milliseconds = milliseconds;break;}return milliseconds;}module.exports = reformMll;\n\n},{}],19:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the numeric month (1-12)\n * @param {Date} \ta date object\n * @returns {Number}\tthe month with no leading zeros\n */function reformMm(date){var month=(date.getMonth() + 1).toString();return month;}module.exports = reformMm;\n\n},{}],20:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit month (01-12)\n * @param {Date} \ta date object\n * @returns {Number}\tthe two-digit month\n */function reformMmm(date){var month=(date.getMonth() + 1).toString();return month.length < 2?'0' + month:month;}module.exports = reformMmm;\n\n},{}],21:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the seconds with no leading zeros (0-59)\n * @param   {Date}   date a date object\n * @returns {String} the seconds with no leading zeros\n */function reformSs(date){var second=date.getSeconds();return second;}module.exports = reformSs;\n\n},{}],22:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the two-digit seconds (0-59)\n * @param   {Date}   date a date object\n * @returns {String} the two-digit seconds\n */function reformSs(date){var second=date.getSeconds().toString();return second.length < 2?'0' + second:second;}module.exports = reformSs;\n\n},{}],23:[function(require,module,exports){\n'use strict';var to=require('./reform-to');var add=require('./reform-add'); /**\n * Subtracts specified increments to a gregorian object\n * @param   {Number} n         a number to multiply the increment by\n * @param   {String} increment an increment to subtract\n * @returns {Object} a new gregorian object\n */function subtract(n,increment){var current=Date.parse(this.d);var increments={ms:1,s:1000,min:60000,h:3600000,d:86400000,w:604800000};var sum=current - n * increments[increment];var date=new Date(sum); /**\n\t * Handle month so that you always wind up on the same day of the month\n\t */var newYear;var newMonth;var newDate=this.d.getUTCDate();if(increment === 'm'){newMonth = this.d.getUTCMonth() - n;newYear = this.d.getUTCFullYear();if(newDate > new Date(this.d.setUTCFullYear(newYear,newMonth + 1,0)).getUTCDate()){date = new Date(this.d.setUTCFullYear(newYear,newMonth + 1,0));}else {date = new Date(this.d.setUTCFullYear(newYear,newMonth,newDate));}} /**\n\t * Handle year so that you always wind up on the same day of the month\n\t */if(increment === 'y'){newYear = this.d.getUTCFullYear() - n;newMonth = this.d.getUTCMonth();if(newDate > new Date(this.d.setUTCFullYear(newYear,newMonth + 1,0)).getUTCDate()){date = new Date(this.d.setUTCFullYear(newYear,newMonth + 1,0));}else {date = new Date(this.d.setUTCFullYear(newYear,newMonth,newDate));}}return {d:date,input:this.input,to:to,add:add,subtract:subtract};}module.exports = subtract;\n\n},{\"./reform-add\":9,\"./reform-to\":24}],24:[function(require,module,exports){\n'use strict';var reformTo={};reformTo.AP = require('./reform-_ap_');reformTo.ap = require('./reform-ap');reformTo.DD = require('./reform-_dd_');reformTo.DDD = require('./reform-_ddd_');reformTo.MM = require('./reform-_mm_');reformTo.MMM = require('./reform-_mmm_');reformTo.mm = require('./reform-mm');reformTo.mmm = require('./reform-mmm');reformTo.dd = require('./reform-dd');reformTo.ddd = require('./reform-ddd');reformTo.hh = require('./reform-hh');reformTo.hhh = require('./reform-hhh');reformTo.HH = require('./reform-_hh_');reformTo.HHH = require('./reform-_hhh_');reformTo.ss = require('./reform-ss');reformTo.sss = require('./reform-sss');reformTo.ml = require('./reform-ml');reformTo.mll = require('./reform-mll');reformTo.tt = require('./reform-tt');reformTo.ttt = require('./reform-ttt');reformTo.yy = require('./reform-yy');reformTo.yyyy = require('./reform-yyyy');reformTo.zz = require('./reform-zz');reformTo.unix = require('./reform-unix');reformTo.utc = require('./reform-utc');reformTo.iso = require('./reform-iso'); /**\n * Take a Gregorian object and output the reformatted string\n * @param {String} \tformat a string or date object (something that can be converted to a valid date)\n * @returns {String}\tthe date reformatted into the specified format\n */function to(format){var date=this.d;var converted=format;var search=['unix', // The number of milliseconds passed since January 1, 1970\n'utc-short', // shortened UTC string (no time included)\n'utc', // UTC string\n'iso-short', // shortened ISO string (no time included)\n'iso', // ISO string \n'yyyy', // four-digit year 2015\n'yy', // two-digit year (20)15\n'DDD', // full day of the week Sunday-Saturday\n'ddd', // two-digit date of the month 01-31\n'DD', // abbreviated day of the week Sun-Sat\n'dd', // date of the month with no leading zeros 1-31\n'MMM', // full month January-December\n'mmm', // two-digit month 00-12\n'MM', // abbreviated month Jan-Dec\n'mm', // month with no leading zeros 1-12\n'hhh', // two-digit hours 00-12\n'hh', // hour with no leading zeros 1-12\n'HHH', // two-digit 24-hour clock hours 00-24\n'HH', // 24-hour clock hour with no leading zeros 0-24\n'ttt', // two-digit minutes 00-59\n'tt', // minutes with no leading zeros 0-59\n'AP', // AM or PM\n'ap', // am or pm\n'sss', // two-digit seconds 00-59\n'ss', // seconds with no leading zeros 0-59\n'mll', // milliseconds 000-999\n'ml', // milliseconds with no leading zeros 0-999\n'zz' // timezone offset UTC -6:00\n];search.some(function(piece){ //console.log(converted + ' vs ' + piece);\nif(converted.indexOf(piece) !== -1){switch(piece){case 'unix':converted = reformTo.unix(date);return true;case 'utc-short':converted = reformTo.utc(date,'short');return true;case 'utc':converted = reformTo.utc(date);return true;case 'iso-short':converted = reformTo.iso(date,'short');return true;case 'iso':converted = reformTo.iso(date);return true;default: // console.log('Search string is: ' + piece);\n// console.log('Converted string is: ' + to[piece](date));\nvar replacer=reformTo[piece](date).toString();converted = converted.replace(piece,replacer);return false;}}}); // console.log(converted);\nreturn converted;}module.exports = to;\n\n},{\"./reform-_ap_\":2,\"./reform-_dd_\":3,\"./reform-_ddd_\":4,\"./reform-_hh_\":5,\"./reform-_hhh_\":6,\"./reform-_mm_\":7,\"./reform-_mmm_\":8,\"./reform-ap\":10,\"./reform-dd\":12,\"./reform-ddd\":13,\"./reform-hh\":14,\"./reform-hhh\":15,\"./reform-iso\":16,\"./reform-ml\":17,\"./reform-mll\":18,\"./reform-mm\":19,\"./reform-mmm\":20,\"./reform-ss\":21,\"./reform-sss\":22,\"./reform-tt\":25,\"./reform-ttt\":26,\"./reform-unix\":27,\"./reform-utc\":28,\"./reform-yy\":29,\"./reform-yyyy\":30,\"./reform-zz\":31}],25:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the minutes with no leading zeros\n * @param   {Date} date a date object\n * @returns {String}  the minutes with no leading zeros\n */function reformTt(date){var minute=date.getMinutes().toString();return minute;}module.exports = reformTt;\n\n},{}],26:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit minutes\n * @param   {Date}   date a date object\n * @returns {String} the two-digit minutes\n */function reformTtt(date){var minute=date.getMinutes().toString();return minute.length < 2?'0' + minute:minute;}module.exports = reformTtt;\n\n},{}],27:[function(require,module,exports){\n'use strict'; /**\n * Converts a date object to UNIX time (milliseconds from January 1, 1970)\n * @param   {Date}   date a date object\n * @returns {Number} milliseconds from January 1, 1970\n */function reformUnix(date){return Date.parse(date);}module.exports = reformUnix;\n\n},{}],28:[function(require,module,exports){\n'use strict'; /**\n * Converts a date object to a UTC string\n * @param   {Date}   date a date object\n * @param \t{String}\tformat optional 'shart' to remove the time from the output\n * @returns {String} UTC string with or without time\n */function reformUTC(date,format){format = format || null;var utc=date.toUTCString();if(format === 'short'){var arr=utc.split(' ');var newArr=[];for(var i=0;i < 4;i++) {newArr.push(arr[i]);}return newArr.join(' ');}return utc;}module.exports = reformUTC;\n\n},{}],29:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit year\n * @param {Date} \ta date object\n * @returns {Number}\tthe two-digit year\n */function reformYy(date){return date.getFullYear().toString().substr(2);}module.exports = reformYy;\n\n},{}],30:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the four-digit year\n * @param {Date} \ta date object\n * @returns {Number}\tthe four-digit year\n */function reformYyyy(date){return date.getFullYear();}module.exports = reformYyyy;\n\n},{}],31:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the timezone offset (UTC +- 01:00, etc.)\n * @param   {Date}   date a date object\n * @returns {String} the timezone offset \n */function reformZz(date){var offset=date.getTimezoneOffset() / 60 * -1;return 'UTC ' + offset + ':00';}module.exports = reformZz;\n\n},{}],32:[function(require,module,exports){\n'use strict';var reformDate=require('./reform-date');var reformTo=require('./reform-to');var reformAdd=require('./reform-add');var reformSubtract=require('./reform-subtract'); /**\n * Take a string or date object and convert it into a gregorian object\n * @param   {Object} obj A string or date object that can be parsed into a date\n * @returns {Object} Gregorian object\n */function reform(obj){var date=reformDate(obj);return {d:date,input:obj,to:reformTo,add:reformAdd,subtract:reformSubtract};}module.exports = reform;\n\n},{\"./reform-add\":9,\"./reform-date\":11,\"./reform-subtract\":23,\"./reform-to\":24}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}