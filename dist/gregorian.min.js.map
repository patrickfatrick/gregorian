{"version":3,"sources":["gregorian.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","gregorian","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"reform","./modules/reform",2,"add","increment","increments","date","Date","setUTCMilliseconds","getUTCMilliseconds","setUTCSeconds","getUTCSeconds","setUTCMinutes","getUTCMinutes","h","setUTCHours","getUTCHours","d","setUTCDate","getUTCDate","m","newMonth","getUTCMonth","newYear","getUTCFullYear","newDate","setUTCFullYear","y","input","to","subtract",3,"reformDate","obj","TypeError","Object","prototype","toString","isNaN","getTime",4,5,"reformAP","hour","getHours","ampm",6,"reformDD","days","dayOfWeek","getDay",7,"reformDDD",8,"reformHH",9,"reformHHH",10,"reformMM","months","month","getMonth",11,"reformMMM",12,"reformAp",13,"reformDd","day","getDate",14,"reformDdd",15,"reformHh",16,"reformHhh",17,"reformISO","format","toISOString","split",18,"reformMl","milliseconds","getMilliseconds",19,"reformMll",20,"reformMm",21,"reformMmm",22,"reformSs","second","getSeconds",23,24,"reformTt","minute","getMinutes",25,"reformTtt",26,"reformUnix","parse",27,"reformUTC","utc","toUTCString","arr","newArr","push","join",28,"reformYy","getFullYear","substr",29,"reformYyyy",30,"reformZz","offset","getTimezoneOffset",31,"delimiter","converted","search","some","piece","re","RegExp","test","reformTo","unix","iso","replacer","replace","AP","ap","D","DD","M","MM","mm","dd","hh","H","HH","ss","ll","tt","yy","yyyy","zz","./reform-to-_ap_","./reform-to-_d_","./reform-to-_dd_","./reform-to-_h_","./reform-to-_hh_","./reform-to-_m_","./reform-to-_mm_","./reform-to-ap","./reform-to-d","./reform-to-dd","./reform-to-h","./reform-to-hh","./reform-to-iso","./reform-to-l","./reform-to-ll","./reform-to-m","./reform-to-mm","./reform-to-s","./reform-to-ss","./reform-to-t","./reform-to-tt","./reform-to-unix","./reform-to-utc","./reform-to-yy","./reform-to-yyyy","./reform-to-zz",32,"reformAdd","reformSubtract","./reform-add","./reform-date","./reform-subtract","./reform-to"],"mappings":"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","file":"gregorian.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.gregorian = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict'; /**\n * Gregorian\n * Author: Patrick Fricano\n * https://www.github.com/patrickfatrick/gregorian\n * \n * Take a user-input date in any format and convert it to several formats\n * Also serves as a wrapper for common JS date methods like toUTCString and toISOString\n * toLocaleDateString is currently not well-supported especially on mobile, so we're avoiding it.\n * \n * gregorian.reform.to('__FORMAT STRING__') string with formatting options specified with keyword strings\n * \t\tSee ./modules/reform-to.js for more information on this\n * gregorian.reform(__OBJECT__).to('iso') ISO string including time such as '2015-09-12T23:06:19Z'\n * \t\t`iso-short` can be added to reduce the string to just the date, like '2015-09-12'\n * gregorian.reform(__OBJECT__).to('utc') UTC string such as 'Sat, 12 Sep 2015 06:00:00 GMT'\n * \t\t`utc-short` can be added to reduce the string to just the date, like 'Sat, 12 Sep 2015'\n * gregorian.reform(__OBJECT__).to('unix') milliseconds since January 1, 1970\n * gregorian.reform(__OBJECT__).add(_NUMBER__, __INCREMENT_STRING__) add time\n * gregorian.reform(__OBJECT__).subtract(_NUMBER__, __INCREMENT_STRING__) subtract time\n */var reform=require('./modules/reform');var gregorian={reform:reform};module.exports = gregorian;\n\n},{\"./modules/reform\":32}],2:[function(require,module,exports){\n'use strict'; /**\n * Adds specified increments to a gregorian object\n * @param   {Number} n         a number to multiply the increment by\n * @param   {String} increment an increment to add\n * @returns {Object} a new gregorian object\n */function add(n,increment){var increments={};increments.l = function(date){return new Date(date.setUTCMilliseconds(date.getUTCMilliseconds() + n));};increments.s = function(date){return new Date(date.setUTCSeconds(date.getUTCSeconds() + n));};increments.t = function(date){return new Date(date.setUTCMinutes(date.getUTCMinutes() + n));};increments.h = function(date){return new Date(date.setUTCHours(date.getUTCHours() + n));};increments.d = function(date){return new Date(date.setUTCDate(date.getUTCDate() + n));};increments.m = function(date){var newMonth=date.getUTCMonth() + n;var newYear=date.getUTCFullYear();var newDate=date.getUTCDate();if(newDate > new Date(date.setUTCFullYear(newYear,newMonth + 1,0)).getUTCDate()){return new Date(date.setUTCFullYear(newYear,newMonth + 1,0));}else {return new Date(date.setUTCFullYear(newYear,newMonth,newDate));}};increments.y = function(date){var newYear=date.getUTCFullYear() + n;var newMonth=date.getUTCMonth();var newDate=date.getUTCDate();if(newDate > new Date(date.setUTCFullYear(newYear,newMonth + 1,0)).getUTCDate()){return new Date(date.setUTCFullYear(newYear,newMonth + 1,0));}else {return new Date(date.setUTCFullYear(newYear,newMonth,newDate));}};return {d:increments[increment](this.d),input:this.input,to:this.to,add:add,subtract:this.subtract};}module.exports = add;\n\n},{}],3:[function(require,module,exports){\n'use strict'; /**\n * Convert the object passed to a date and test its validity\n * @param {Object} \tobj any object\n * @returns {Date}\tif string passes the test, return the date object\n */function reformDate(obj){if(obj == null)throw new TypeError('This is null or undefined');obj = new Date(obj);if(Object.prototype.toString.call(obj) === '[object Date]'){if(isNaN(obj.getTime())){throw new TypeError('This is not a valid date');}}return obj;}module.exports = reformDate;\n\n},{}],4:[function(require,module,exports){\n'use strict'; /**\n * Subtracts specified increments to a gregorian object\n * @param   {Number} n         a number to multiply the increment by\n * @param   {String} increment an increment to subtract\n * @returns {Object} a new gregorian object\n */function subtract(n,increment){var increments={};increments.l = function(date){return new Date(date.setUTCMilliseconds(date.getUTCMilliseconds() - n));};increments.s = function(date){return new Date(date.setUTCSeconds(date.getUTCSeconds() - n));};increments.t = function(date){return new Date(date.setUTCMinutes(date.getUTCMinutes() - n));};increments.h = function(date){return new Date(date.setUTCHours(date.getUTCHours() - n));};increments.d = function(date){return new Date(date.setUTCDate(date.getUTCDate() - n));};increments.m = function(date){var newMonth=date.getUTCMonth() - n;var newYear=date.getUTCFullYear();var newDate=date.getUTCDate();if(newDate > new Date(date.setUTCFullYear(newYear,newMonth + 1,0)).getUTCDate()){return new Date(date.setUTCFullYear(newYear,newMonth + 1,0));}else {return new Date(date.setUTCFullYear(newYear,newMonth,newDate));}};increments.y = function(date){var newYear=date.getUTCFullYear() - n;var newMonth=date.getUTCMonth();var newDate=date.getUTCDate();if(newDate > new Date(date.setUTCFullYear(newYear,newMonth + 1,0)).getUTCDate()){return new Date(date.setUTCFullYear(newYear,newMonth + 1,0));}else {return new Date(date.setUTCFullYear(newYear,newMonth,newDate));}};return {d:increments[increment](this.d),input:this.input,to:this.to,add:this.add,subtract:subtract};}module.exports = subtract;\n\n},{}],5:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the capitalized 12-hour clock period (AM/PM)\n * @param   {Date}   date a date object\n * @returns {String} the capitalized 12-hour clock period \n */function reformAP(date){var hour=date.getHours();var ampm=hour < 12?'AM':'PM';return ampm;}module.exports = reformAP;\n\n},{}],6:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the abreviated day of the week\n * @param {Date} \ta date object\n * @returns {Number}\tthe abbreviated day of the week\n */function reformDD(date){var days=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];var dayOfWeek=date.getDay();return days[dayOfWeek];}module.exports = reformDD;\n\n},{}],7:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the day of the week\n * @param {Date} \ta date object\n * @returns {String} the full day of the week\n */function reformDDD(date){var days=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];var dayOfWeek=date.getDay();return days[dayOfWeek];}module.exports = reformDDD;\n\n},{}],8:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the 24-hour clock hour with no leading zeros (0-23)\n * @param   {Date}   date a date object\n * @returns {String} the hour with no leading zeros\n */function reformHH(date){var hour=date.getHours();return hour;}module.exports = reformHH;\n\n},{}],9:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the 24-hour clock hour with no leading zeros (0-23)\n * @param   {Date}   date a date object\n * @returns {String} the hour with no leading zeros\n */function reformHHH(date){var hour=date.getHours().toString();return hour.length < 2?'0' + hour:hour;}module.exports = reformHHH;\n\n},{}],10:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the abbreviated month\n * @param {Date} \ta date object\n * @returns {String}\tthe abbreviated month\n */function reformMM(date){var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];var month=date.getMonth();return months[month];}module.exports = reformMM;\n\n},{}],11:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the month\n * @param {Date} \ta date object\n * @returns {String}\tthe full month\n */function reformMMM(date){var months=['January','February','March','April','May','June','July','August','September','October','November','December'];var month=date.getMonth();return months[month];}module.exports = reformMMM;\n\n},{}],12:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the uncapitalized 12-hour clock period (AM/PM)\n * @param   {Date}   date a date object\n * @returns {String} the uncapitalized 12-hour clock period \n */function reformAp(date){var hour=date.getHours();var ampm=hour < 12?'am':'pm';return ampm;}module.exports = reformAp;\n\n},{}],13:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the date of the month with no leading zeros (1-31)\n * @param {Date} \ta date object\n * @returns {Number}\tthe date of the month with no leading zeros\n */function reformDd(date){var day=date.getDate().toString();return day;}module.exports = reformDd;\n\n},{}],14:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit date of the month (01-31)\n * @param {Date} \ta date object\n * @returns {Number}\tthe two-digit date of the month\n */function reformDdd(date){var day=date.getDate().toString();return day.length < 2?'0' + day:day;}module.exports = reformDdd;\n\n},{}],15:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the hour with no leading zeros (1-12)\n * @param   {Date}   date a date object\n * @returns {String} the hour with no leading zeros\n */function reformHh(date){var hour=date.getHours();if(hour === 0)hour = 12;if(hour < 13)hour = hour;if(hour >= 13)hour = hour - 12;return hour;}module.exports = reformHh;\n\n},{}],16:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit hour (01-12)\n * @param   {Date}   date a date object\n * @returns {String} the two-digit hour\n */function reformHhh(date){var hour=date.getHours();if(hour === 0)hour = 12;if(hour < 13)hour = hour;if(hour >= 13)hour = hour - 12;hour = hour.toString();return hour.length < 2?'0' + hour:hour;}module.exports = reformHhh;\n\n},{}],17:[function(require,module,exports){\n'use strict'; /**\n * Converts a date object to an ISO string\n * @param   {Date}   date   a date object\n * @param {String}\t\tformat optional 'short' to remove the time\n * @returns {String} ISO String including time\n */function reformISO(date,format){format = format || null; //console.log('iso function date: ' + date);\nif(format === 'short')return date.toISOString().split('T')[0];return date.toISOString();}module.exports = reformISO;\n\n},{}],18:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the milliseconds with no leading zeros (0-999)\n * @param   {Date} date a date object\n * @returns {String}    the number of milliseconds\n */function reformMl(date){var milliseconds=date.getMilliseconds().toString();return milliseconds;}module.exports = reformMl;\n\n},{}],19:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and and output the three-digit milliseconds (000-999)\n * @param   {Date}   date a date object\n * @returns {String} the number of milliseconds\n */function reformMll(date){var milliseconds=date.getMilliseconds().toString();switch(milliseconds.length){case 1:milliseconds = '00' + milliseconds;break;case 2:milliseconds = '0' + milliseconds;break;default:milliseconds = milliseconds;break;}return milliseconds;}module.exports = reformMll;\n\n},{}],20:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the numeric month (1-12)\n * @param {Date} \ta date object\n * @returns {Number}\tthe month with no leading zeros\n */function reformMm(date){var month=(date.getMonth() + 1).toString();return month;}module.exports = reformMm;\n\n},{}],21:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit month (01-12)\n * @param {Date} \ta date object\n * @returns {Number}\tthe two-digit month\n */function reformMmm(date){var month=(date.getMonth() + 1).toString();return month.length < 2?'0' + month:month;}module.exports = reformMmm;\n\n},{}],22:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the seconds with no leading zeros (0-59)\n * @param   {Date}   date a date object\n * @returns {String} the seconds with no leading zeros\n */function reformSs(date){var second=date.getSeconds();return second;}module.exports = reformSs;\n\n},{}],23:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and outpit the two-digit seconds (0-59)\n * @param   {Date}   date a date object\n * @returns {String} the two-digit seconds\n */function reformSs(date){var second=date.getSeconds().toString();return second.length < 2?'0' + second:second;}module.exports = reformSs;\n\n},{}],24:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the minutes with no leading zeros\n * @param   {Date} date a date object\n * @returns {String}  the minutes with no leading zeros\n */function reformTt(date){var minute=date.getMinutes().toString();return minute;}module.exports = reformTt;\n\n},{}],25:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit minutes\n * @param   {Date}   date a date object\n * @returns {String} the two-digit minutes\n */function reformTtt(date){var minute=date.getMinutes().toString();return minute.length < 2?'0' + minute:minute;}module.exports = reformTtt;\n\n},{}],26:[function(require,module,exports){\n'use strict'; /**\n * Converts a date object to UNIX time (milliseconds from January 1, 1970)\n * @param   {Date}   date a date object\n * @returns {Number} milliseconds from January 1, 1970\n */function reformUnix(date){return Date.parse(date);}module.exports = reformUnix;\n\n},{}],27:[function(require,module,exports){\n'use strict'; /**\n * Converts a date object to a UTC string\n * @param   {Date}   date a date object\n * @param \t{String}\tformat optional 'shart' to remove the time from the output\n * @returns {String} UTC string with or without time\n */function reformUTC(date,format){format = format || null;var utc=date.toUTCString();if(format === 'short'){var arr=utc.split(' ');var newArr=[];for(var i=0;i < 4;i++) {newArr.push(arr[i]);}return newArr.join(' ');}return utc;}module.exports = reformUTC;\n\n},{}],28:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the two-digit year\n * @param {Date} \ta date object\n * @returns {Number}\tthe two-digit year\n */function reformYy(date){return date.getFullYear().toString().substr(2);}module.exports = reformYy;\n\n},{}],29:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the four-digit year\n * @param {Date} \ta date object\n * @returns {Number}\tthe four-digit year\n */function reformYyyy(date){return date.getFullYear();}module.exports = reformYyyy;\n\n},{}],30:[function(require,module,exports){\n'use strict'; /**\n * Take a date object and output the timezone offset (UTC +- 01:00, etc.)\n * @param   {Date}   date a date object\n * @returns {String} the timezone offset \n */function reformZz(date){var offset=date.getTimezoneOffset() / 60 * -1;return 'UTC ' + offset + ':00';}module.exports = reformZz;\n\n},{}],31:[function(require,module,exports){\n'use strict';var reformTo={};reformTo.AP = require('./reform-to-_ap_');reformTo.ap = require('./reform-to-ap');reformTo.D = require('./reform-to-_d_');reformTo.DD = require('./reform-to-_dd_');reformTo.M = require('./reform-to-_m_');reformTo.MM = require('./reform-to-_mm_');reformTo.m = require('./reform-to-m');reformTo.mm = require('./reform-to-mm');reformTo.d = require('./reform-to-d');reformTo.dd = require('./reform-to-dd');reformTo.h = require('./reform-to-h');reformTo.hh = require('./reform-to-hh');reformTo.H = require('./reform-to-_h_');reformTo.HH = require('./reform-to-_hh_');reformTo.s = require('./reform-to-s');reformTo.ss = require('./reform-to-ss');reformTo.l = require('./reform-to-l');reformTo.ll = require('./reform-to-ll');reformTo.t = require('./reform-to-t');reformTo.tt = require('./reform-to-tt');reformTo.yy = require('./reform-to-yy');reformTo.yyyy = require('./reform-to-yyyy');reformTo.zz = require('./reform-to-zz');reformTo.unix = require('./reform-to-unix');reformTo.utc = require('./reform-to-utc');reformTo.iso = require('./reform-to-iso'); /**\n * Take a Gregorian object and output the reformatted string\n * @param {String} \tformat a string or date object (something that can be converted to a valid date)\n * @returns {String}\tthe date reformatted into the specified format\n */function to(format,delimiter){delimiter = delimiter || '+';var date=this.d;var converted=format;var search=['unix', // The number of milliseconds passed since January 1, 1970\n'utc-short', // shortened UTC string (no time included)\n'utc', // UTC string\n'iso-short', // shortened ISO string (no time included)\n'iso', // ISO string \n'yyyy', // four-digit year 2015\n'yy', // two-digit year (20)15\n'DD', // full day of the week Sunday-Saturday\n'dd', // two-digit date of the month 01-31\n'D', // abbreviated day of the week Sun-Sat\n'd', // date of the month with no leading zeros 1-31\n'MM', // full month January-December\n'mm', // two-digit month 00-12\n'M', // abbreviated month Jan-Dec\n'm', // month with no leading zeros 1-12\n'hh', // two-digit hours 00-12\n'h', // hour with no leading zeros 1-12\n'HH', // two-digit 24-hour clock hours 00-24\n'H', // 24-hour clock hour with no leading zeros 0-24\n'tt', // two-digit minutes 00-59\n't', // minutes with no leading zeros 0-59\n'AP', // AM or PM\n'ap', // am or pm\n'ss', // two-digit seconds 00-59\n's', // seconds with no leading zeros 0-59\n'll', // milliseconds 000-999\n'l', // milliseconds with no leading zeros 0-999\n'zz' // timezone offset UTC -6:00\n];search.some(function(piece){ //console.log(converted + ' vs ' + piece);\nvar re=new RegExp('\\\\b' + piece + '\\\\b','g');if(re.test(converted)){switch(piece){case 'unix':converted = reformTo.unix(date);return true;case 'utc-short':converted = reformTo.utc(date,'short');return true;case 'utc':converted = reformTo.utc(date);return true;case 'iso-short':converted = reformTo.iso(date,'short');return true;case 'iso':converted = reformTo.iso(date);return true;default: //console.log('Search string is: ' + piece);\n//console.log('Converted string is: ' + reformTo[piece](date));\nvar replacer=reformTo[piece](date).toString();converted = converted.replace(re,replacer);return false;}}});if(typeof converted === 'string'){converted = converted.replace(delimiter,'');} // console .log(converted);\nreturn converted;}module.exports = to;\n\n},{\"./reform-to-_ap_\":5,\"./reform-to-_d_\":6,\"./reform-to-_dd_\":7,\"./reform-to-_h_\":8,\"./reform-to-_hh_\":9,\"./reform-to-_m_\":10,\"./reform-to-_mm_\":11,\"./reform-to-ap\":12,\"./reform-to-d\":13,\"./reform-to-dd\":14,\"./reform-to-h\":15,\"./reform-to-hh\":16,\"./reform-to-iso\":17,\"./reform-to-l\":18,\"./reform-to-ll\":19,\"./reform-to-m\":20,\"./reform-to-mm\":21,\"./reform-to-s\":22,\"./reform-to-ss\":23,\"./reform-to-t\":24,\"./reform-to-tt\":25,\"./reform-to-unix\":26,\"./reform-to-utc\":27,\"./reform-to-yy\":28,\"./reform-to-yyyy\":29,\"./reform-to-zz\":30}],32:[function(require,module,exports){\n'use strict';var reformDate=require('./reform-date');var reformTo=require('./reform-to');var reformAdd=require('./reform-add');var reformSubtract=require('./reform-subtract'); /**\n * Take a string or date object and convert it into a gregorian object\n * @param   {Object} obj A string or date object that can be parsed into a date\n * @returns {Object} Gregorian object\n */function reform(obj){var date=reformDate(obj);return {d:date,input:obj,to:reformTo,add:reformAdd,subtract:reformSubtract};}module.exports = reform;\n\n},{\"./reform-add\":2,\"./reform-date\":3,\"./reform-subtract\":4,\"./reform-to\":31}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}