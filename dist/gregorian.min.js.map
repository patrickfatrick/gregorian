{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/gregorian.js","gregorian.min.js","src/modules/reform-add-subtract.js","src/modules/reform-date.js","src/modules/reform-restart.js","src/modules/reform-to-functions.js","src/modules/reform-to.js","src/modules/reform.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","gregorian","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_modulesReform","_modulesReform2","reform","./modules/reform",2,"addSubtract","increment","increments","date","Date","setUTCMilliseconds","getUTCMilliseconds","setUTCSeconds","getUTCSeconds","setUTCMinutes","getUTCMinutes","h","setUTCHours","getUTCHours","d","setUTCDate","getUTCDate","w","m","newMonth","getUTCMonth","newYear","getUTCFullYear","newDate","setUTCFullYear","y","input","to","add","subtract","restart",3,"TypeError","prototype","toString","isNaN","getTime",4,"setSeconds","getSeconds","setMinutes","getMinutes","setHours","getHours","setDate","getDate","getDay","setMonth","getMonth","setFullYear","getFullYear",5,"AP","hour","ampm","ap","D","days","dayOfWeek","DD","H","HH","M","months","month","MM","day","dd","hh","milliseconds","getMilliseconds","ll","mm","second","ss","minute","tt","yy","substr","yyyy","zz","offset","getTimezoneOffset","iso","format","toISOString","split","utc","toUTCString","arr","newArr","push","join","unix","parse",6,"_interopRequireWildcard","newObj","key","hasOwnProperty","_reformToFunctions","delimiter","search","converted","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","piece","re","RegExp","test","replacer","replace","err","./reform-to-functions",7,"_reformDate","_reformDate2","_reformTo","_reformTo2","_reformAddSubtract","_reformRestart","_reformRestart2","./reform-add-subtract","./reform-date","./reform-restart","./reform-to"],"mappings":"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","file":"gregorian.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n/**\n * Gregorian\n * Author: Patrick Fricano\n * https://www.github.com/patrickfatrick/gregorian\n */\n\nimport reform from './modules/reform';\n\nlet gregorian = {\n\treform: reform\n};\n\nexport default gregorian;",null,"'use strict';\n\n/**\n * Adds specified increments to a gregorian object\n * @param   {Number} n         a number to multiply the increment by\n * @param   {String} increment an increment to add\n * @returns {Object} a new gregorian object\n */\nfunction addSubtract (obj, n, increment) {\n\t\n\tlet increments = {};\n\t\n\tincrements.l = date => {\n\t\treturn new Date(date.setUTCMilliseconds(date.getUTCMilliseconds() + n));\n\t};\n\tincrements.s = date => {\n\t\treturn new Date(date.setUTCSeconds(date.getUTCSeconds() + n));\n\t};\n\tincrements.t = date => {\n\t\treturn new Date(date.setUTCMinutes(date.getUTCMinutes() + n));\n\t};\n\tincrements.h = date => {\n\t\treturn new Date(date.setUTCHours(date.getUTCHours() + n));\n\t};\n\tincrements.d = date => {\n\t\treturn new Date(date.setUTCDate(date.getUTCDate() + n));\n\t};\n\tincrements.w = date => {\n\t\treturn new Date(date.setUTCDate(date.getUTCDate() + (n * 7)));\n\t};\n\tincrements.m = date => {\n\t\tlet newMonth = date.getUTCMonth() + n;\n\t\tlet newYear = date.getUTCFullYear();\n\t\tlet newDate = date.getUTCDate();\n\t\t\n\t\tif (newDate > new Date(date.setUTCFullYear(newYear, newMonth + 1, 0)).getUTCDate()) {\n\t\t\treturn new Date(date.setUTCFullYear(newYear, newMonth + 1, 0));\n\t\t} else {\n\t\t\treturn new Date(date.setUTCFullYear(newYear, newMonth, newDate));\t\t\t\t\t\t\t\n\t\t}\n\t};\n\tincrements.y = date => {\n\t\tlet newYear = date.getUTCFullYear() + n;\n\t\tlet newMonth = date.getUTCMonth();\n\t\tlet newDate = date.getUTCDate();\n\t\t\n\t\tif (newDate > new Date(date.setUTCFullYear(newYear, newMonth + 1, 0)).getUTCDate()) {\n\t\t\treturn new Date(date.setUTCFullYear(newYear, newMonth + 1, 0));\n\t\t} else {\n\t\t\treturn new Date(date.setUTCFullYear(newYear, newMonth, newDate));\t\t\t\t\t\t\t\n\t\t}\n\t};\n\t\n\treturn {\n\t\td: increments[increment](obj.d),\n\t\tinput: obj.input,\n\t\tto: obj.to,\n\t\tadd: obj.add,\n\t\tsubtract: obj.subtract,\n\t\trestart: obj.restart\n\t};\n}\n\nexport var add = function (n, increment) {\n\treturn addSubtract(this, n * 1, increment);\n};\n\nexport var subtract = function (n, increment) {\n\treturn addSubtract(this, n * -1, increment);\n};","'use strict';\n\n/**\n * Convert the object passed to a date and test its validity\n * @param {Object} \tobj any object\n * @returns {Date}\tif string passes the test, return the date object\n */\nexport default function (obj) {\n\tif (obj == null) throw new TypeError('This is null or undefined');\n\tobj = new Date(obj);\n\tif (Object.prototype.toString.call(obj) === '[object Date]') {\n\t\tif (isNaN(obj.getTime())) {\n\t\t\tthrow new TypeError('This is not a valid date');\n\t\t}\n\t}\n\treturn obj;\n}","'use strict';\n\n/**\n * Sets the date or time to the start of the specified increment\n * @param   {String} increment an increment to set\n * @returns {Object} a new gregorian object\n */\nexport default function (increment) {\n\tlet increments = {};\n\t\n\tincrements.s = date => {\n\t\treturn new Date(date.setSeconds(date.getSeconds(), 0));\n\t};\n\tincrements.t = date => {\n\t\treturn new Date(date.setMinutes(date.getMinutes(), 0, 0));\n\t};\n\tincrements.h = date => {\n\t\treturn new Date(date.setHours(date.getHours(), 0, 0, 0));\n\t};\n\tincrements.d = date => {\n\t\tdate.setDate(date.getDate());\n\t\tdate.setHours(0, 0, 0, 0);\n\t\treturn new Date(date);\n\t};\n\tincrements.w = date => {\n\t\tdate.setDate(date.getDate() - date.getDay());\n\t\tdate.setHours(0, 0, 0, 0);\n\t\treturn new Date(date);\n\t};\n\tincrements.m = date => {\n\t\tdate.setMonth(date.getMonth(), 1);\n\t\tdate.setHours(0, 0, 0, 0);\n\t\treturn new Date(date);\n\t};\n\tincrements.y = date => {\n\t\tdate.setFullYear(date.getFullYear(), 0, 1);\n\t\tdate.setHours(0, 0, 0, 0);\n\t\treturn new Date(date);\n\t};\n\t\n\treturn {\n\t\td: increments[increment](this.d),\n\t\tinput: this.input,\n\t\tto: this.to,\n\t\tadd: this.add,\n\t\tsubtract: this.subtract,\n\t\trestart: this.restart\n\t};\n}","'use strict';\n\n/**\n * Take a date object and output the capitalized 12-hour clock period (AM/PM)\n * @param   {Date}   date a date object\n * @returns {String} the capitalized 12-hour clock period \n */\nexport var AP = function (date) {\n\tconst hour = date.getHours();\n\tconst ampm = (hour < 12) ? 'AM' : 'PM';\n\treturn ampm;\n};\n\n/**\n * Take a date object and output the uncapitalized 12-hour clock period (AM/PM)\n * @param   {Date   date a date object\n * @returns {String} the uncapitalized 12-hour clock period \n */\nexport var ap = function (date) {\n\tconst hour = date.getHours();\n\tconst ampm = (hour < 12) ? 'am' : 'pm';\n\treturn ampm;\n};\n\n/**\n * Take a date object and output the abreviated day of the week\n * @param {Date} \ta date object\n * @returns {String}\tthe abbreviated day of the week\n */\nexport var D = function (date) {\n\tconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\tconst dayOfWeek = date.getDay();\n\treturn days[dayOfWeek];\n};\n\n/**\n * Take a date object and output the day of the week\n * @param {Date} \ta date object\n * @returns {String} the full day of the week\n */\nexport var DD = function (date) {\n\tconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\tconst dayOfWeek = date.getDay();\n\treturn days[dayOfWeek];\n};\n\n/**\n * Take a date object and outpit the 24-hour clock hour with no leading zeros (0-23)\n * @param   {Date}   date a date object\n * @returns {String} the hour with no leading zeros\n */\nexport var H = function (date) {\n\tconst hour = date.getHours();\n\treturn hour;\n};\n\n/**\n * Take a date object and outpit the 24-hour clock hour with no leading zeros (0-23)\n * @param   {Date}   date a date object\n * @returns {String} the hour with no leading zeros\n */\nexport var HH = function (date) {\n\tconst hour = date.getHours().toString();\n\treturn (hour.length < 2) ? '0' + hour : hour;\n};\n\n/**\n * Take a date object and output the abbreviated month\n * @param {Date} \ta date object\n * @returns {String}\tthe abbreviated month\n */\nexport var M = function (date) {\n\tconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov',  'Dec'];\n\tconst month = date.getMonth();\n\treturn months[month];\n};\n\n/**\n * Take a date object and output the month\n * @param {Date} \ta date object\n * @returns {String}\tthe full month\n */\nexport var MM = function (date) {\n\tconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\tconst month = date.getMonth();\n\treturn months[month];\n};\n\n/**\n * Take a date object and output the date of the month with no leading zeros (1-31)\n * @param {Date} \ta date object\n * @returns {String}\tthe date of the month with no leading zeros\n */\nexport var d = function (date) {\n\tconst day = date.getDate().toString();\n\treturn day;\n};\n\n/**\n * Take a date object and output the two-digit date of the month (01-31)\n * @param {Date} \ta date object\n * @returns {String}\tthe two-digit date of the month\n */\nexport var dd = function (date) {\n\tconst day = date.getDate().toString();\n\treturn (day.length < 2) ? '0' + day : day;\n};\n\n/**\n * Take a date object and outpit the hour with no leading zeros (1-12)\n * @param   {Date}   date a date object\n * @returns {String} the hour with no leading zeros\n */\nexport var h = function (date) {\n\tlet hour = date.getHours();\n\tif (hour === 0) hour = 12;\n\tif (hour < 13) hour = hour;\n\tif (hour >= 13) hour = hour - 12;\n\treturn hour;\n};\n\n/**\n * Take a date object and output the two-digit hour (01-12)\n * @param   {Date}   date a date object\n * @returns {String} the two-digit hour\n */\nexport var hh = function (date) {\n\tlet hour = date.getHours();\n\tif (hour === 0) hour = 12;\n\tif (hour < 13) hour = hour;\n\tif (hour >= 13) hour = hour - 12;\n\thour = hour.toString();\n\treturn (hour.length < 2) ? '0' + hour : hour;\n};\n\n/**\n * Take a date object and output the milliseconds with no leading zeros (0-999)\n * @param   {Date} date a date object\n * @returns {String}    the number of milliseconds\n */\nexport var l = function (date) {\n\tconst milliseconds = date.getMilliseconds().toString();\n\treturn milliseconds;\n};\n\n/**\n * Take a date object and and output the three-digit milliseconds (000-999)\n * @param   {Date}   date a date object\n * @returns {String} the number of milliseconds\n */\nexport var ll = function (date) {\n\tlet milliseconds = date.getMilliseconds().toString();\n\tswitch (milliseconds.length) {\n\t\tcase 1:\n\t\t\tmilliseconds = '00' + milliseconds;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tmilliseconds = '0' + milliseconds;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tmilliseconds = milliseconds;\n\t\t\tbreak;\n\t}\n\treturn milliseconds;\n};\n\n/**\n * Take a date object and output the numeric month (1-12)\n * @param {Date} \ta date object\n * @returns {String}\tthe month with no leading zeros\n */\nexport var m = function (date) {\n\tconst month = (date.getMonth() + 1).toString();\n\treturn month;\n};\n\n/**\n * Take a date object and output the two-digit month (01-12)\n * @param {Date} \ta date object\n * @returns {String}\tthe two-digit month\n */\nexport var mm = function (date) {\n\tlet month = (date.getMonth() + 1).toString();\n\treturn (month.length < 2) ? '0' + month : month;\n};\n\n/**\n * Take a date object and outpit the seconds with no leading zeros (0-59)\n * @param   {Date}   date a date object\n * @returns {String} the seconds with no leading zeros\n */\nexport var s = function (date) {\n\tconst second = date.getSeconds();\n\treturn second;\n};\n\n/**\n * Take a date object and outpit the two-digit seconds (0-59)\n * @param   {Date}   date a date object\n * @returns {String} the two-digit seconds\n */\nexport var ss = function (date) {\n\tlet second = date.getSeconds().toString();\n\treturn (second.length < 2) ? '0' + second : second;\n};\n\n/**\n * Take a date object and output the minutes with no leading zeros\n * @param   {Date} date a date object\n * @returns {String}  the minutes with no leading zeros\n */\nexport var t = function (date) {\n\tconst minute = date.getMinutes().toString();\n\treturn minute;\n};\n\n/**\n * Take a date object and output the two-digit minutes\n * @param   {Date}   date a date object\n * @returns {String} the two-digit minutes\n */\nexport var tt = function (date) {\n\tlet minute = date.getMinutes().toString();\n\treturn (minute.length < 2) ? '0' + minute : minute;\n};\n\n/**\n * Take a date object and output the two-digit year\n * @param {Date} \ta date object\n * @returns {String}\tthe two-digit year\n */\nexport var yy = function (date) {\n\treturn date.getFullYear().toString().substr(2);\n};\n\n/**\n * Take a date object and output the four-digit year\n * @param {Date} \ta date object\n * @returns {String}\tthe four-digit year\n */\nexport var yyyy = function (date) {\n\treturn date.getFullYear().toString();\n};\n\n/**\n * Take a date object and output the timezone offset (UTC +- 01:00, etc.)\n * @param   {Date}   date a date object\n * @returns {String} the timezone offset \n */\nexport var zz = function (date) {\n\tconst offset = date.getTimezoneOffset() / 60 * -1;\n\treturn 'UTC ' + offset + ':00';\n};\n\n/**\n * Converts a date object to an ISO string\n * @param   {Date}   date   a date object\n * @param {String}\t\tformat optional 'short' to remove the time\n * @returns {String} ISO String including time\n */\nexport var iso = function (date, format) {\n\tformat = format || null;\n\t//console.log('iso function date: ' + date);\n\tif (format === 'short') return date.toISOString().split('T')[0];\n\treturn date.toISOString();\n};\n\n/**\n * Converts a date object to a UTC string\n * @param   {Date}   date a date object\n * @param \t{String}\tformat optional 'shart' to remove the time from the output\n * @returns {String} UTC string with or without time\n */\n\nexport var utc = function (date, format) {\n\tformat = format || null;\n\tconst utc = date.toUTCString();\n\tif (format === 'short') {\n\t\tconst arr = utc.split(' ');\n\t\tlet newArr = [];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tnewArr.push(arr[i]);\n\t\t}\n\n\t\treturn newArr.join(' ');\n\t}\n\treturn utc;\n};\n\n/**\n * Converts a date object to UNIX time (milliseconds from January 1, 1970)\n * @param   {Date}   date a date object\n * @returns {Number} milliseconds from January 1, 1970\n */\n\nexport var unix = function (date) {\n\treturn Date.parse(date);\n};","'use strict';\n\nimport * as to from './reform-to-functions';\n\n/**\n * Take a Gregorian object and output the reformatted string\n * See https://github.com/patrickfatrick/gregorian#accepted-formats for details\n * @param {String} \tformat a string or date object (something that can be converted to a valid date)\n * @returns {String}\tthe date reformatted into the specified format\n */\nexport default function (format, delimiter) {\n\tdelimiter = delimiter || '+';\n\tconst date = this.d;\n\tconst search = [\n\t\t'unix', 'utc-short', 'utc', 'iso-short', 'iso', 'yyyy','yy', 'DD', 'dd', 'D', 'd', 'MM', 'mm','M', 'm', 'hh', 'h', 'HH', 'H', 'tt', 't', 'AP', 'ap', 'ss', 's', 'll', 'l', 'zz'\n\t];\n\tlet converted = format;\n\n\tfor (let piece of search) {\n\t\t//console.log(converted + ' vs ' + piece);\n\t\tconst re = new RegExp('\\\\b' + piece + '\\\\b', 'g');\n\t\tif (re.test(converted)) {\n\t\t\tswitch (piece) {\n\t\t\t\tcase 'unix':\n\t\t\t\t\tconverted = to.unix(date);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'utc-short':\n\t\t\t\t\tconverted = to.utc(date, 'short');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'utc':\n\t\t\t\t\tconverted = to.utc(date);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'iso-short':\n\t\t\t\t\tconverted = to.iso(date, 'short');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'iso':\n\t\t\t\t\tconverted = to.iso(date);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t//console.log('Search string is: ' + piece);\n\t\t\t\t\t//console.log('Converted string is: ' + to[piece](date));\n\t\t\t\t\tlet replacer = to[piece](date).toString();\n\t\t\t\t\tconverted = converted.replace(re, replacer);\n\t\t\t}\n\t\t}\n\t}\n\tif (typeof converted === 'string') {\n\t\tconverted = converted.replace(new RegExp('\\\\' + delimiter, 'g'), '');\n\t}\n\t// console .log(converted);\n\treturn converted;\n}\n","'use strict';\n\nimport reformDate from './reform-date';\nimport reformTo from './reform-to';\nimport {add, subtract} from './reform-add-subtract';\nimport reformRestart from './reform-restart';\n\n/**\n * Take a string or date object and convert it into a gregorian object\n * @param   {Object} obj A string or date object that can be parsed into a date\n * @returns {Object} Gregorian object\n */\nexport default function (obj) {\n\tconst date = reformDate(obj);\n\treturn {\n\t\td: date,\n\t\tinput: obj,\n\t\tto: reformTo,\n\t\tadd: add,\n\t\tsubtract: subtract,\n\t\trestart: reformRestart\n\t};\n}"],"sourceRoot":"/source/"}